name: Claude AI Code Review

on:
  pull_request:
    types: [opened, synchronize]
    
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  claude-review:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude CLI
        run: |
          npm install -g claude-cli
      
      - name: Run Claude Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Get changed files
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          
          # Run Claude review
          claude review \
            --files changed_files.txt \
            --standards "https://github.com/williamzujkowski/standards" \
            --check "security,performance,quality,standards" \
            --output review.md
      
      - name: Post Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review.md', 'utf8');
            
            // Post review comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– Claude AI Code Review\n\n${review}`
            });
      
      - name: Add Labels
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review.md', 'utf8');
            
            const labels = [];
            if (review.includes('security')) labels.push('security');
            if (review.includes('performance')) labels.push('performance');
            if (review.includes('needs-improvement')) labels.push('needs-work');
            if (review.includes('approved')) labels.push('approved');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              });
            }